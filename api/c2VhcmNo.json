[{"title":"IPv6","date":"2022-10-19T16:00:00.000Z","date_formatted":{"ll":"Oct 20, 2022","L":"10/20/2022","MM-DD":"10-20"},"updated":"2022-10-19T16:00:00.000Z","content":"from IPv4 to IPv6, a 128-bit IP notation.\n\nEUI-64\nEUI, stands for Extended Unique Identifier, is a method which allow automatically configure IPv6 addresses with the MAC address of the network interface to generate a unique 64-bit id value.\nexample\nAssume there is a 48-bit MAC address: 04:cd:ae:3b:d0:e6,\nStep 1. Split the MAC address into 24-bit from the middle: 04:cd:ae &amp; 3b:d0:e6, as known as, OUI (Organizationally Unique Identifier) &amp; NIC (Network Interface Card)\n\nStep 2. Concat 16-bit fffe [1] between the 2 values, the result goes: 04:cd:aefffe3b:d0:e6\n\nStep 3. Reformat with : &amp; 4 char as a group, result: 04cd:aeff:fe3b:d0e6\n\nStep 4. Modify the 7th bit with 2'complement\n- which located in 04 from the above example, then tranform to 0000 0100 as binary\n- switch the binary value of the 3rd index -&gt; 00000 01'0'0 to 00000 01'1'0\n- tranform back to heximal is 06, so now the result is 06cd:aeff:fe3b:d0e6\nSo far, the 64-bit unique interface ID is generated.\n\nStep 5. Add the prefix as the beginning 64-bit, see the table below, for more detail: https://www.jannet.hk/ip-address-version-6-ipv6-zh-hant/\n\n\n\nprefix\n\n\n\n\nLink-Local\nFE80::/10\n\n\nUnique-Local\nFC00::/7\n\n\nGlobal Aggregatable [2]\n2000::/3\n\n\nStateless Address Autoconfiguration (SLAAC)\nAuto-configure w/ IPv6 Router\n\n\n[1]: IEEE has chosen FFFE as a reserved value which can only appear in EUI-64 generated from the an EUI-48 MAC address\n[2]: Global Aggregatable: 2002::/16 is used for 6to4 Tunnel\nref: https://networklessons.com/ipv6/ipv6-eui-64-explained\nref: https://www.jannet.hk/ip-address-version-6-ipv6-zh-hant/\nref: https://community.cisco.com/t5/networking-knowledge-base/understanding-ipv6-eui-64-bit-address/ta-p/3116953\n","thumbnail":"https://images.unsplash.com/photo-1607723619497-98a79f01ba90?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1682&q=80","plink":"https://jason19970210.github.io/2022/10/20/ipv6/"},{"title":"RIPng with Cisco & ISS","date":"2022-10-19T16:00:00.000Z","date_formatted":{"ll":"Oct 20, 2022","L":"10/20/2022","MM-DD":"10-20"},"updated":"2022-10-19T16:00:00.000Z","content":"\nIPv6 RIP functions the same and offers the same benefits as RIP in IPv4. RIP enhancements for IPv6, detailed in RFC 2080, include support for IPv6 addresses and prefixes, and the use of the all-RIP-devices multicast group address FF02::9 as the destination address for RIP update messages.  – Cisco\n\n\ncisco command\nenable\n1234567# configure terminal(config)# ipv6 unicast-routing(config)# interface __type__ __number__(config-if)# ipv6 rip __name__ enable\nwhere the name is the process name for rip\ncustomizing IPv6 RIP (optional)\n123456789# configure terminal#### optional-1(config)# interface __type__ __number__(config-if)# ipv6 rip __name__  default-information &#123;only | originate&#125;#### optional-2(config)# ipv6 router rip __name__(config-router)# maximum-paths __number-paths__\nref: https://www.cisco.com/c/en/us/td/docs/ios-xml/ios/iproute_rip/configuration/xe-3s/asr1000/ip6-rip-xe.html\nISS command\n\n\nCommand\nCheck\n\n\n\n\nipv6 router rip\n\n\n\n\n\n\n\n","plink":"https://jason19970210.github.io/2022/10/20/ripng-cisco-iss/"},{"title":"Python Execution Timer with Decorator","date":"2022-10-18T16:00:00.000Z","date_formatted":{"ll":"Oct 19, 2022","L":"10/19/2022","MM-DD":"10-19"},"updated":"2022-10-18T16:00:00.000Z","content":"Ref: https://www.geeksforgeeks.org/timing-functions-with-decorators-python/\n\ntimeit.py123456789101112131415161718192021from time import time  def timer(func):    # This function shows the execution time of     # the function object passed    def wrap_func(*args, **kwargs):        t1 = time()        result = func(*args, **kwargs)        t2 = time()        print(f&#x27;Function &#123;func.__name__!r&#125; executed in &#123;(t2-t1):.4f&#125;s&#x27;)        return result    return wrap_func    @timerdef long_time(n):    for i in range(n):        for j in range(100000):            i*j  long_time(5)\nPhoto by Tsvetoslav Hristov on Unsplash\n","thumbnail":"https://images.unsplash.com/photo-1592134212762-51ee580cd38a?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1471&q=80","plink":"https://jason19970210.github.io/2022/10/19/python-execution-timer-with-decorator/"},{"title":"Split Horizon (Distance Vector)","date":"2022-10-17T16:00:00.000Z","date_formatted":{"ll":"Oct 18, 2022","L":"10/18/2022","MM-DD":"10-18"},"updated":"2022-10-17T16:00:00.000Z","content":"Split Horizon\nTargets\n\nAvoid routing loop in distance vector routing protocols, ex. RIP.\n\n\n","plink":"https://jason19970210.github.io/2022/10/18/split-horizon/"},{"title":"Hexo & Inside","date":"2022-10-16T16:00:00.000Z","date_formatted":{"ll":"Oct 17, 2022","L":"10/17/2022","MM-DD":"10-17"},"updated":"2022-10-18T16:00:00.000Z","content":"pre-requirement\n\nnode.js &gt;= 8.10, recommand &gt;=10.0\nnpm\ngit\n\nfor more detail, please visit: https://hexo.io/zh-tw/docs/\nsetup\n1$ npm install -g hexo-cli\ninstall theme - Inside\n1$ npm i hexo-theme-inside\nfor more detail, please visit: https://github.com/ikeq/hexo-theme-inside\nquick qtart\nmodify the global _config.yml\n_config.yml1theme: inside\ntheme configuration\n\ncreate a config file named _config.inside.yml\nCopy theme config yml\n\nfor more detail, please visit: https://blog.oniuo.com/theme-inside\nsetup for github action\n\ncreate a new repo named ‘username.github.io’ where username is your account name of github\ninstall dependency 1$ npm i hexo-deployer-git\n\nmodify the section deploy inside _config.yml, be sure to modify the username\nfor more detail, please visit: https://hexo.io/zh-tw/docs/github-pages.html#專案頁面\n\n_config.yml123456# Deployment## Docs: https://hexo.io/docs/one-command-deploymentdeploy:  type: &#x27;git&#x27;  repo: &#x27;https://github.com/username/username.github.io&#x27;  branch: &#x27;main&#x27;\nusage\ncreate a new post\n1$ hexo new &quot;My New Post&quot;\nMore info: Writing\nrun server\n123$ hexo server$ hexo s\nMore info: Server\ngenerate static files\n123$ hexo generate$ hexo g\nMore info: Generating\nclean the workspace\n123$ hexo clean$ hexo cl\ndeploy to remote sites, ex. github\n123$ hexo deploy$ hexo d\nMore info: Deployment\ngenerate &amp; deploy\n1$ hedo g -d","plink":"https://jason19970210.github.io/2022/10/17/hexo-&-inside/"},{"title":"OSPF NSF Introduction","date":"2022-10-16T16:00:00.000Z","date_formatted":{"ll":"Oct 17, 2022","L":"10/17/2022","MM-DD":"10-17"},"updated":"2022-10-17T16:00:00.000Z","content":"OSPF Non-Stop Forwarding / Graceful Restart\nTo avoid routing instability, without causing LSA flood &amp; without neighbor adjacency flap\nHackmd Slide: https://hackmd.io/@jason19970210-senao/ospf-nsf\n\n\n\n\n\n\n\n\nRFC 3623\nGraceful OSPF Restart\n\n\nRFC 5250\nThe OSPF Opaque LSA Option\n\n\nroles\n\nrestarter\nhelper\n\npacket\n\nopaque LSAs / Grace-LSAs\n\nscope: Link-Local scope (LSA Type 9), only need to be seen by neighbors direct connect to restarter\n\n\n\ngrace-LSA format\nref: https://www.rfc-editor.org/rfc/rfc3623.html#page-13\n\nThe grace-LSA is a link-local scoped Opaque-LSA (RFC 2370), having an Opaque Type of 3 and an Opaque ID as 0.\n\nLSA:  link state advertisements\n\nLSA type: 9, 10, 11\nopaque type: 3 (ref)\nLS Age field set to 0 when LSA is first originated\n\nthe current value of LS age then indicates how long the restarter made its request\n\n\n\ngrace-LSA body: TLV-encoded\n\nThe format of the TLVs within the body of grace-LSA is the same as the format used by TE (Traffic Engineering extensions) to OSPF\n\n\nGrace Period (Required)\nGraceful Restart Reason (Required, default: 0 -&gt; Unknown)\nIP Interface Address\nDoNotAge: never set in a grace-LSA\n\n\nref: http://www.h3c.com/cn/d_200811/618963_30003_0.htm\nref: https://networklessons.com/cisco/ccie-routing-switching-written/ospf-graceful-restart\nRFC 2328：OSPF Version 2\nRFC 3623：Graceful OSPF Restart\nRFC 4811：OSPF Out-of-Band LSDB Resynchronization\nRFC 4812：OSPF Restart Signaling\nRFC 4813：OSPF Link-Local Signaling\n","plink":"https://jason19970210.github.io/2022/10/17/ospf-nsf/"},{"title":"RIPng Introduction","date":"2022-10-16T16:00:00.000Z","date_formatted":{"ll":"Oct 17, 2022","L":"10/17/2022","MM-DD":"10-17"},"updated":"2022-10-17T16:00:00.000Z","content":"Routing Information Protocol\n\n\nVersion 1\nVersion 2\nNext Generation\n\n\n\n\nRFC 1058\nRFC 4822\nRFC 2080\n\n\n\nRIPng\n\nSupports multiple IPv6 addresses on each interface\nProtocol &amp; Port: UDP, 521\n\nPacket Frame\n\nSource: https://support.huawei.com/enterprise/en/doc/EDOC1100058403/b0f8860e/ripng-packet-format\nthe version field: set to 1\nthe command field:\n1-Request: A request to send all or part of of routing table. ( specific / whole-table )\n2-Response: A response containing all or part of routing table, this can be sent in response to a request or sent in unsolicited.\nThe maximum RTE(s) capbility of a packet: (depends on MTU size of the interface\n123               +   MTU - sizeof(IPv6_Headers) - UDP_Header_Len - RIPng_Header_Len   +#RTE(s) =  INT | -----------------------------------------------------------------  |               +                           RTE_size                                 +\nSource: https://sites.google.com/site/amitsciscozone/ipv6/ripng\nRoute Table Entry Packet Detail\n1. Next Hop RTE / Request packet\nIt defines the IPv6 address of the next hop and is located before a group of IPv6-prefix RTEs that have the same next hop. The Metric field of a next hop RTE is always 0xFF.\n\n\nSource: https://support.huawei.com/enterprise/en/doc/EDOC1100058403/b0f8860e/ripng-packet-format\n\n2. IPv6 Prefix RTE / Response packet\nIt describes the destination IPv6 address and the cost in the RIPng routing table and is located after a next hop RTE. A next hop RTE can be followed by multiple different IPv6-prefix RTEs\n\n\nSource: https://support.huawei.com/enterprise/en/doc/EDOC1100058403/b0f8860e/ripng-packet-format\n\nTimer / Intervals\nAll mentioned as default:\n\nUpdate Timer: 30 secs\n(Route) Timeout  / Age Timer: 180 secs\nGarbage Collection Timeout Timer: 120 secs\nHold-Down Timer: (NOT described in RFC 2080)\n\nmentioned in https://support.huawei.com/enterprise/en/doc/EDOC1100058403/c193f046/timers\n\ndisable by default, if configured, hold-down timer starts after receives a route with cost greater than 16.\n\n\n\n\n\nUpdate Timer has a random offset within +/- 0 to 15 seconds,\nthe offset is derived from 0.5 * Update Timer\nref: https://docs.ruckuswireless.com/fastiron/08.0.40/fastiron-08040a-l3guide/GUID-97023AC1-C034-40EA-B02D-1E3E9DACCAC7.html\nref: https://techhub.hpe.com/eginfolib/networking/docs/switches/5130ei/5200-3943_l3-ip-rtng_cg/content/483570120.htm\nref: https://www.arubanetworks.com/techdocs/AOS-CX/AOSCX-CLI-Bank/cli_8400/Content/Chp_RIP/RIPng_cmds/tim-upd-rip-ipv-10.htm\nInput Processing\nRequest Messages\n\nnormally sent as multicasts, can be unicast direct\nno entry, then no response is given\na whole-table request comes with only/exactly 1 entry as destination prefix of 0, a prefix length of 0, and a metric of infinity (16)\n\nthe response will include the Split Horizon\n\n\na request for specific entries no Split Horizon processing is done, due to these requests might be used for different purpose\n\nResponse Messages\n\nmust be ignored if it is not from the RIPng port\nshold check the datagram is from a valid neighbor\nthe source of the datagram must be local-link address (wiki),\n\nand not one of the router’s own addresses\n\n\n(?) periodic advertisements must have their hop counts set to 255, and inbound, multicast packets sent from the RIPng port (i.e. periodic advertisement or triggered update packets) must be examined to ensure that the hop count is 255\n\nThis absolutely guarantees that a packet is from a neighbor, because any intermediate node would have decremented the hop count\n(-) not yet confirm, but there is no data in the RIPng sample from wireshark\n\n\n\nRTE Validation\n\ndestination prefix validation\n\nnot a multicast prefix and not a local-link prefix, a link-local address should never be present in a RTE\n\n\nprefix length validation (i.e., between 0 and 128, inclusive)\nmetric validation (i.e., between 1 and 16, inclusive)\n\n\nIf the existing route is showing signs of timing out, it may be better to switch to an equally-good alternative route immediately, rather than waiting for the timeout to happen.\nTherefore, if the new metric is the same as the old one, examine the timeout for the existing route.\nIf it is at least halfway to the expiration point, switch to the new route.\nThis heuristic is optional, but highly recommended.\n\nOutput Processing\nProcess be triggered:\n\nwhen a input request is received, the output response is only sent to the requestor via unicast\nby regular routing update, with the whole routing table\nby triggered updates, whenever the metric for a router is changed\n\nMulticast to all neighbors comes with the multicast group FF02::9\n\nref: https://en.wikipedia.org/wiki/Routing_Information_Protocol\nref: https://www.rfc-editor.org/rfc/rfc2080.html\n","plink":"https://jason19970210.github.io/2022/10/17/ripng-introduction/"},{"title":"RIPv2 Introduction","date":"2022-09-30T16:00:00.000Z","date_formatted":{"ll":"Oct 1, 2022","L":"10/01/2022","MM-DD":"10-01"},"updated":"2022-10-19T16:00:00.000Z","content":"Routing Information Protocol\n\n\nVersion 1\nVersion 2\nNext Generation\n\n\n\n\nRFC 1058\nRFC 4822\nRFC 2080\n\n\n\nRIPv2\n\nInterior Gateway Protocol (IGP) subset\nProtocol &amp; Port: UDP, 520\nDistance Vector (Bellman-Ford) algorithm\nClassless Routing Protocol, support CIDR (Classless Inter-Domain Routing，無類域間路由)\nMetric: Hop count, max up to 15 of each single route, value 16 as unreachable / inifinite\n\nPacket Frame\nTimer / Intervals\nAll mentioned as default:\n\nUpdate Timer: 30 secs\nInvalid Timer: 180 secs\nHold-Down Timer: 180 secs\nFlush Timer: 240 secs\n\n\nAuthentication\n\n\nSimple Password\nWith authentication key of up to 16 characters included in the packet, if password doesnt match, then discard the packet.\nThis method provides very little security level, which is posiible to learn the key through by sniffer RIP packets.\n\n\nMD5 algorithm\nBy using MD5 method to create a crypto checksum of a RIP packet and an authentication key with up to 16 characters.\nThe transmitted packet doesn’t contain the authentication key itself but a crypto checksum, called the digest\n\n\nRef: https://sc1.checkpoint.com/documents/R81/WebAdminGuides/EN/CP_R81_Gaia_Advanced_Routing_AdminGuide/Topics-GARG/RIP-v2.htm\n","plink":"https://jason19970210.github.io/2022/10/01/ripv2-introduction/"},{"title":"A Step by Step How to Start Docker-compose Container at Boot","date":"2022-05-12T16:00:00.000Z","date_formatted":{"ll":"May 13, 2022","L":"05/13/2022","MM-DD":"05-13"},"updated":"2022-10-16T16:00:00.000Z","content":"Post in Medium: https://jason19970210.medium.com/a-step-by-step-how-to-start-docker-compose-container-at-boot-effe9964e57f\nOnce create a docker container, we might hope the container can start automatically by itself, at the boot and even reboot.\n\nHere we will go through with docker-compose yaml config file, ex. docker-compose.yml .\nAs the basic yaml file:\ndocker-compose.yml12345678version: &quot;3&quot;service:    restart: always # the most important line for this post    image: xxxx #docker image    environment:        - key : value ...    ports:        - 8080:80\nLet’s take a look at docker restart policy with 4 types :\nRef : https://docs.docker.com/config/containers/start-containers-automatically/#use-a-restart-policy\nno : Do not automatically restart the container.  (the default)\non-failure[:max-retries] : Restart the container if it exits due to an error, which manifests as a non-zero exit code. Optionally, limit the number of times the Docker daemon attempts to restart the container using the :max-retries option.\nalways : Always restart the container if it stops. If it is manually stopped, it is restarted only when Docker daemon restarts or the container itself is manually restarted. (See the second bullet listed in restart policy details)\nunless-stopped : Similar to always, except that when the container is stopped (manually or otherwise), it is not restarted even after Docker daemon restarts.\nWith the basic docker command start a container:\n$ docker run -d --restart &lt;restart_policy&gt; &lt;docker_image&gt;\nPlease make sure the docker daemon has been enable to launch at boot:\n12345$ sudo systemctl start docker$ sudo systemctl enable docker$ sudo systemctl is-enabled docker ## the output should be enabled\nCheck the docker container restart policy\n$ docker inspect &lt;container_id&gt; | fgrep -i restart -A 5\nif nothing is set to restart:\n123456&quot;AppArmorProfile&quot;: &quot;docker-default&quot;,&quot;RestartPolicy&quot;: &#123;    &quot;Name&quot;: &quot;&quot;,    &quot;MaximumRetryCount&quot;:0&#125;,...\nOnce we set the restart parameter:\n123456&quot;AppArmorProfile&quot;: &quot;docker-default&quot;,&quot;RestartPolicy&quot;: &#123;    &quot;Name&quot;: &quot;always&quot;,    &quot;MaximumRetryCount&quot;:0&#125;,...\nNow the container can restart by itself after the pc/server reboot.\nHope this can help you and save a day off !!\nRef: https://stackoverflow.com/a/70991572\nCover photo by Onur Binay on Unsplash\n","thumbnail":"https://miro.medium.com/max/720/0*Lg-9-9a8CGboAcaT","plink":"https://jason19970210.github.io/2022/05/13/a-step-by-step-how-to-start-docker-compose-container-at-boot/"},{"title":"Raspberry Pi 4 with Multiple UART Interfaces","date":"2021-12-16T16:00:00.000Z","date_formatted":{"ll":"Dec 17, 2021","L":"12/17/2021","MM-DD":"12-17"},"updated":"2022-10-16T16:00:00.000Z","content":"Sometimes we need the lots of components, sensors, modules using the UART interfaces to communicate with the Raspberry Pi.\n\nPost in Medium: https://medium.com/@jason19970210/raspberry-pi-4-with-multiple-uart-interface-4eac75f74d7c\nEnvironment\n\nHardware : Raspberry Pi 4 Model B (BCM2177*) ref\nOperation System : Respbian Linux 11\nCPU Arch: armv7l\n\nThere are 2 types of UART interface existed on Raspberry Pi, mini UART &amp; PL011 UART.\nBy default, /dev/ttyS0 maps to mini UART; on the other hand, /dev/ttyAMA0 maps to PL011 UART.\nSoftware Setup\n12$ sudo su$ vim /boot/config.txt\nadd following lines at the end of the file:\n12345678# enable serial interfaceenable_uart=1dtoverlay=uart0dtoverlay=uart1dtoverlay=uart2dtoverlay=uart3dtoverlay=uart4dtoverlay=uart5\nSave, exit &amp; Reboot !!\nCheck system open the serial by command $ ls -al /dev/ttyAMA*\n123456$ ls -al /dev/ttyAMA*crw-rw---- 1 root dialout 204, 64 Dec 16 16:01 /dev/ttyAMA0crw-rw---- 1 root dialout 204, 65 Dec 16 16:01 /dev/ttyAMA1crw-rw---- 1 root dialout 204, 66 Dec 16 16:01 /dev/ttyAMA2crw-rw---- 1 root dialout 204, 67 Dec 16 16:01 /dev/ttyAMA3crw-rw---- 1 root dialout 204, 68 Dec 16 16:01 /dev/ttyAMA4\nLet’s take a look into the Raspberry Pi 4 Model B GPIO Pinout:\n\nGPIO Pinout : https://www.raspberrypi.com/documentation/computers/os.html#gpio-and-the-40-pin-header\nHardware Setup\nRaspberry Pi Pin pair with UART:\n123456           TXD       RXD         Communication Portuart0 :  GPIO 14    GPIO 15         /dev/ttyAMA0 uart1 :  GPIO 0     GPIO 1          /dev/ttyAMA1uart2 :  GPIO 4     GPIO 5          /dev/ttyAMA2uart3 :  GPIO 8     GPIO 9          /dev/ttyAMA3uart4 :  GPIO 12    GPIO 13         /dev/ttyAMA4\nPC setup with USB-to-UART Adapter :\n\nFT232 : https://www.waveshare.com/ft232-usb-uart-board-type-a.htm\nPlease make sure GND is connected correctly !\nUSB-to-UART TXD connect to Raspberry Pi uart RXD GPIO Pin\nUSB-to-UART RXD connect to Raspberry Pi uart TXD GPIO Pin\nTake uart3 for example:\n123USB-to-UART TXD &lt;--&gt; GPIO 8USB-to-UART RXD &lt;--&gt; GPIO 9USB-to-UART GND &lt;--&gt; GND\nImplementation\nOnce finish setup, open a serial console on PC (ex. Putty) with correct COM Port (ex. COM3) &amp; Baud Rate set to 115200\nThen open a terminal in Raspberry Pi, send message from CLI to PC :\n$ echo 'hello' &gt; /dev/ttyAMA3\nThis command should send the string hello to PC via /dev/ttyAMA3 , then the string will be parsed by PC, finally display on serial console.\nHope this article can help those makers connect more devices via multiple UART interfaces !!\nCover photo by Dawid Zawiła on Unsplash\n","thumbnail":"https://miro.medium.com/max/720/0*wKhpJO1bfvRlAd2Q","plink":"https://jason19970210.github.io/2021/12/17/raspberry-pi-4-with-multiple-uart-interface/"},{"title":"Full CV, Jason Hsu","date":"2022-04-17T16:00:00.000Z","date_formatted":{"ll":"Apr 18, 2022","L":"04/18/2022","MM-DD":"04-18"},"updated":"2022-10-18T16:00:00.000Z","content":"\ninfo\n\n\n\n\n\n\n\n\n Email\njason19970210@gmail.com\n\n\n Tel\n(+886) 916-748-210\n\n\n Links\n\n\n\n\n\ntoc\n\n\n\n\n\n\n\n\n\n\nskills\neducation\nexperience\nprojects &amp; researches\n\n\nspeech\ncompetition &amp; awards\ncommunity contribution / volunteer\ncertificate\n\n\n\nskills\n\n\nCategory\nDetails\n\n\n\n\nBackend Develop\nPython, Node.js, Nest.js\n\n\nDigital Forensics\nEnCase, Magnet, SANS SIFT, Autopsy, …\n\n\nNoSQL Database\nRedis, MongoDB, Elasticsearch\n\n\nCloud\nUbuntu, CentOS, AWS, GCP\n\n\nMessage Queue\nKafka, RabbitMQ, EMQX, Mosquitto\n\n\nMobile Applications\nFlutter, Swift\n\n\nNetworking\nDynamic Routing, BT/BLE\n\n\nPost Quantum Cryptographic\nNTRU Encrypt, Falcon Signature\n\n\nSystem Architecture\n\n\n\nSoftware Automation\n\n\n\nDevOps\nDocker, Shell\n\n\nUI / UX\nFigma, Sketch\n\n\n3D Design\nModeling: Rhino 3D, | Printing\n\n\neducation\n\n2020/06 - 2022/07 - Master of Computer Science , National Central University\n\nDept. Computer Science &amp; Information Engineering, Advanced Defence Lab (ADL)\n\n\n2018/02 - 2020/06 - Bachelor of Bussiness Administration (B.B.A.), Chang Gung University\n\nDept. Information Management\n\n\n2015/09 - 2018/02 - (suspend) Bachelor, Chang Gung University\n\nDept. Industrial Design\n\n\n\n\nexperience\n\n\n2022/08 - Present - Senao Network Inc.\n\nSwitch Firmware R&amp;D\n\n\n\n2022/03 - Present - Skynet Cybersecurity Consultant\n\nTraining Consultant\nForensics &amp; Cybersecurity Researcher\nIoV Forensic Cloud\nLeadership of projects\n\n\n\n2022/01 - 2022/06 - TungHai University (Dept. Bussiness Administration BA)\n\nResearch Assistant, Nursing and Care Robots\n\n\n\n2020/07 - 2022/07 - Health &amp; Information Technology Co., Ltd.\n\nTraining Consultant\nApp Developer\nForensics &amp; Cybersecurity Researcher\nmacOS / Linux Security Health Check\nApple BLE Exploit Trace\nMedical Equipment BLE &amp; Storage Exploit Research\nIoV Forensic Cloud\n\n\nDevOps\nLeadership of projects\n\n\n\n2020/11 - 2021/11 - FitiVision Technology Inc.\n\nSoftware Developer\n\n\n\n2019/08 - 2022/08 - National Central University (Dept. CE, Dept. CSIE)\n\nResearch Assistant\nLeadership of projects\n\n\n\n2015/09 - 2020/08 - Chang Gung University (Dept. CSIE, WINS Lab)\n\nResearch Assistant\nLeadership of projects\n\n\n\n2018/02 - 2019/07 Chang Gung University (Dept. ID, Dept. IM, Dept. ME)\n\nResearch Assistant\n\n\n\nprojects &amp; researches\n\n\nMobile Application (iOS / Flutter)\n\nBLE Medical Application (iOS / Flutter)\nMusicAI (iOS)\nMedical Chatbot (iOS)\nDistributed Earthquake Warning Application (iOS / Android)\n\n\n\nBackend Development (Python, Node.js, Redis, MongoDB, ElasticSearch, Kafka, RabbitMQ)\n\nDistributed Crawler System (Python, Redis)\nDistributed Earthquake Warning System (Python, Redis)\nLive Streaming Searching Engine System (Python, Node.js, ElasticSearch)\nIoV Forensics Development (Python, Node.js, MongoDB, Kafka, RabbitMQ)\n\n\n\nIIoT Development (RTOS, C, Node.js)\n\nIEEE 802.15.4 Stack with TI CC1312R Implementatoin\n\n\n\nIoT Development\n\nArduino ESP32\n\nGas Sensor MQ-5\n\n\nRaspberry Pi\nROS-Based Robot : Temi\n\nAndroid Based\nNode.js Server\nPython Script\nMQTT Middleware\nRedisDB\nMongoDB\n\n\n\n\n\nIoV Development\n\nOBD-II &amp; CAN Bus\nPost-Quantum Cryptography &amp; Digital Signature Research\n\nNTRU / Falcon\n\n\nForensic Cloud Architecture Design\n\n\n\nOpen Source Project\n\nNetScanner : https://github.com/jason19970210/NetScanner\nContributor of GNS3 Doc\nBackend Dev. of FingerStyle Taiwan  - Wed, Sep 28, 2022\nAutomation Side Projects\n\nPhotos Orgnaization by Python\nC Files &amp; Header Files Mapping for large scale project\n\n\n\n\n\nspeech\n\n2022/07/21 - 聯陽電子 - BT/BLE Protocal &amp; Security Issues\n2022 - ITRI AMR Course\n\nAdvanced Technology\nSystem Integration\n\n\n2021 - ITRI Red / Blue Team Course\n\nInformation Gathering\n\n\n2021 - ITRI IoV Security Course\n\nVehicle Communication Protocols\nECU &amp; Sensors\n\n\n2021 - Python Mentor @ Women Who Code Community\n2021 - Military Division\n\nDigital Forensics Basic\n\n\n2019 - iOS Development Course @ Chang Gung University\n\ncompetition &amp; awards\n\n\n2021 - LINE Fresh\n\n\n2021 - Civil IoT Taiwan Datathon\n\nSpecial Judges’ Award\n\n\n\n2020 - Cyber Security Competition 金盾獎\n\n\n2020 - idb x Hitcon BBC(Bug Bounty Challenge), IoT Devices\n\n\n2020 - ROS-Based Innovation Application Proposal\n\nJudges’ Award\n\n\n\n2020 - gSIC-REAT (Rehabilitation Engineering and Assistive Technology)\n\nSliver Medal\n\n\n\n2019 - Startup Weekend Education 2019\n\nGreatest Design Award\n\n\n\n2019 - Apple App Mobile Innovation\n\nJudges’ Award\n\n\n\n2018 - Startup Weekend Education\n\nGreatest Design Award\n\n\n\n2018 - Apple App Mobile Innovation\n\nMerit Award\n\n\n\n2018 - PIXNET Hackathon\n\nTransportation for Smart City\n\n\n\n2018 - Macronix Golden Silicon Adwards\n\n\ncommunity contribution / volunteer\n\n2022/09 - AWS Community Day (The First)\nNCtfU - CTF\nGDSC National Central University 2021\nPyCon 2019, 2021, 2022 APAC\nOpen Up Summit 2018\nWomen Who Code\nWomen In Tech\nFLYTECH 飛捷科技 台東知本偏鄉自造小時代(Video Editing &amp; 3D Modeling / Printing)\n\ncertificate\n\nTOEIC 795\n\n","thumbnail":"https://miro.medium.com/max/720/0*Lg-9-9a8CGboAcaT","plink":"https://jason19970210.github.io/about/"}]