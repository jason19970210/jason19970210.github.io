[{"title":"Split Horizon (Distance Vector)","date":"2022-10-17T16:00:00.000Z","date_formatted":{"ll":"Oct 18, 2022","L":"10/18/2022","MM-DD":"10-18"},"updated":"2022-10-17T16:00:00.000Z","content":"Split Horizon\nTargets\n\nAvoid routing loop in distance vector routing protocols, ex. RIP.\n\n\n","plink":"https://jason19970210.github.io/2022/10/18/split-horizon/"},{"title":"Hexo Tags","date":"2022-10-17T16:00:00.000Z","date_formatted":{"ll":"Oct 18, 2022","L":"10/18/2022","MM-DD":"10-18"},"updated":"2022-10-17T16:00:00.000Z","content":"Ref: https://hexo.io/docs/tag-plugins\nCode Block\nabc.py1import pandas","plink":"https://jason19970210.github.io/2022/10/18/test/"},{"title":"Hexo & Inside","date":"2022-10-16T16:00:00.000Z","date_formatted":{"ll":"Oct 17, 2022","L":"10/17/2022","MM-DD":"10-17"},"updated":"2022-10-18T16:00:00.000Z","content":"pre-requirement\n\nnode.js &gt;= 8.10, recommand &gt;=10.0\nnpm\ngit\n\nfor more detail, please visit: https://hexo.io/zh-tw/docs/\nsetup\n1$ npm install -g hexo-cli\ninstall theme - Inside\n1$ npm i hexo-theme-inside\nfor more detail, please visit: https://github.com/ikeq/hexo-theme-inside\nquick qtart\nmodify the global _config.yml\n_config.yml1theme: inside\ntheme configuration\n\ncreate a config file named _config.inside.yml\nCopy theme config yml\n\nfor more detail, please visit: https://blog.oniuo.com/theme-inside\nsetup for github action\n\ncreate a new repo named ‘username.github.io’ where username is your account name of github\ninstall dependency 1$ npm i hexo-deployer-git\n\nmodify the section deploy inside _config.yml, be sure to modify the username\nfor more detail, please visit: https://hexo.io/zh-tw/docs/github-pages.html#專案頁面\n\n_config.yml123456# Deployment## Docs: https://hexo.io/docs/one-command-deploymentdeploy:  type: &#x27;git&#x27;  repo: &#x27;https://github.com/username/username.github.io&#x27;  branch: &#x27;main&#x27;\nusage\ncreate a new post\n1$ hexo new &quot;My New Post&quot;\nMore info: Writing\nrun server\n123$ hexo server$ hexo s\nMore info: Server\ngenerate static files\n123$ hexo generate$ hexo g\nMore info: Generating\nclean the workspace\n123$ hexo clean$ hexo cl\ndeploy to remote sites, ex. github\n123$ hexo deploy$ hexo d\nMore info: Deployment\ngenerate &amp; deploy\n1$ hedo g -d","plink":"https://jason19970210.github.io/2022/10/17/hexo-&-inside/"},{"title":"RIPv2 & RIPng Introduction","date":"2022-10-16T16:00:00.000Z","date_formatted":{"ll":"Oct 17, 2022","L":"10/17/2022","MM-DD":"10-17"},"updated":"2022-10-17T16:00:00.000Z","content":"Routing Information Protocol\n\n\nVersion 1\nVersion 2\nNext Generation\n\n\n\n\nRFC 1058\nRFC 4822\nRFC 2080\n\n\n\nRIPv2\n\nInterior Gateway Protocol (IGP) subset\nProtocol &amp; Port: UDP, 520\nDistance Vector (Bellman-Ford) algorithm\nClassless Routing Protocol, support CIDR (Classless Inter-Domain Routing，無類域間路由)\nMetric: Hop count, max up to 15 of each single route, value 16 as unreachable / inifinite\n\nPacket Frame\nTimer / Intervals\nAll mentioned as default:\n\nUpdate Timer: 30 secs\nInvalid Timer: 180 secs\nHold-Down Timer: 180 secs\nFlush Timer: 240 secs\n\n\nAuthentication\n\n\nSimple Password\nWith authentication key of up to 16 characters included in the packet, if password doesnt match, then discard the packet.\nThis method provides very little security level, which is posiible to learn the key through by sniffer RIP packets.\n\n\nMD5 algorithm\nBy using MD5 method to create a crypto checksum of a RIP packet and an authentication key with up to 16 characters.\nThe transmitted packet doesn’t contain the authentication key itself but a crypto checksum, called the digest\n\n\nRef: https://sc1.checkpoint.com/documents/R81/WebAdminGuides/EN/CP_R81_Gaia_Advanced_Routing_AdminGuide/Topics-GARG/RIP-v2.htm\nRIPng\n\nSupports multiple IPv6 addresses on each interface\nProtocol &amp; Port: UDP, 521\n\nPacket Frame\n\nSource: https://sites.google.com/site/amitsciscozone/ipv6/ripng\nAs the command field:\n1-Request: A request to send all or part of of routing table.\n2-Response: A response containing all or part of routing table, this can be sent in response to a request or sent in unsolicited.\nThe maximum RTE(s) capbility of a packet: (depends on MTU size of the interface\n\nSource: https://sites.google.com/site/amitsciscozone/ipv6/ripng\nRoute Table Entry Packet Detail\n\nSource: https://sites.google.com/site/amitsciscozone/ipv6/ripng\nTimer / Intervals\nAll mentioned as default:\n\nUpdate Timer: 30 secs\n(Route) Timeout Timer: 180 secs\nGarbage Collection Timeout Timer: 120 secs\n\nUpdate Timer has a random offset within +/- 0 to 15 seconds,\nthe offset is derived from 0.5 * Update Timer\nInput Processing\nRequest Messages\n\nnormally sent as multicasts, can be unicast direct\n\n\nRef:\n\nwiki: https://en.wikipedia.org/wiki/Routing_Information_Protocol\n\n","plink":"https://jason19970210.github.io/2022/10/17/ripv2-ripng/"},{"title":"A step by step how to start docker-compose container at boot","date":"2022-05-12T16:00:00.000Z","date_formatted":{"ll":"May 13, 2022","L":"05/13/2022","MM-DD":"05-13"},"updated":"2022-10-16T16:00:00.000Z","content":"Post in Medium: https://jason19970210.medium.com/a-step-by-step-how-to-start-docker-compose-container-at-boot-effe9964e57f\nOnce create a docker container, we might hope the container can start automatically by itself, at the boot and even reboot.\n\nHere we will go through with docker-compose yaml config file, ex. docker-compose.yml .\nAs the basic yaml file:\ndocker-compose.yml12345678version: &quot;3&quot;service:    restart: always # the most important line for this post    image: xxxx #docker image    environment:        - key : value ...    ports:        - 8080:80\nLet’s take a look at docker restart policy with 4 types :\nRef : https://docs.docker.com/config/containers/start-containers-automatically/#use-a-restart-policy\nno : Do not automatically restart the container.  (the default)\non-failure[:max-retries] : Restart the container if it exits due to an error, which manifests as a non-zero exit code. Optionally, limit the number of times the Docker daemon attempts to restart the container using the :max-retries option.\nalways : Always restart the container if it stops. If it is manually stopped, it is restarted only when Docker daemon restarts or the container itself is manually restarted. (See the second bullet listed in restart policy details)\nunless-stopped : Similar to always, except that when the container is stopped (manually or otherwise), it is not restarted even after Docker daemon restarts.\nWith the basic docker command start a container:\n$ docker run -d --restart &lt;restart_policy&gt; &lt;docker_image&gt;\nPlease make sure the docker daemon has been enable to launch at boot:\n12345$ sudo systemctl start docker$ sudo systemctl enable docker$ sudo systemctl is-enabled docker ## the output should be enabled\nCheck the docker container restart policy\n$ docker inspect &lt;container_id&gt; | fgrep -i restart -A 5\nif nothing is set to restart:\n123456&quot;AppArmorProfile&quot;: &quot;docker-default&quot;,&quot;RestartPolicy&quot;: &#123;    &quot;Name&quot;: &quot;&quot;,    &quot;MaximumRetryCount&quot;:0&#125;,...\nOnce we set the restart parameter:\n123456&quot;AppArmorProfile&quot;: &quot;docker-default&quot;,&quot;RestartPolicy&quot;: &#123;    &quot;Name&quot;: &quot;always&quot;,    &quot;MaximumRetryCount&quot;:0&#125;,...\nNow the container can restart by itself after the pc/server reboot.\nHope this can help you and save a day off !!\nRef: https://stackoverflow.com/a/70991572\nCover photo by Onur Binay on Unsplash\n","thumbnail":"https://miro.medium.com/max/720/0*Lg-9-9a8CGboAcaT","plink":"https://jason19970210.github.io/2022/05/13/step-by-step-start-docker-compose-container-at-boot/"},{"title":"Raspberry Pi 4 with Multiple UART Interfaces","date":"2021-12-16T16:00:00.000Z","date_formatted":{"ll":"Dec 17, 2021","L":"12/17/2021","MM-DD":"12-17"},"updated":"2022-10-16T16:00:00.000Z","content":"Sometimes we need the lots of components, sensors, modules using the UART interfaces to communicate with the Raspberry Pi.\n\nPost in Medium: https://medium.com/@jason19970210/raspberry-pi-4-with-multiple-uart-interface-4eac75f74d7c\nEnvironment\n\nHardware : Raspberry Pi 4 Model B (BCM2177*) ref\nOperation System : Respbian Linux 11\nCPU Arch: armv7l\n\nThere are 2 types of UART interface existed on Raspberry Pi, mini UART &amp; PL011 UART.\nBy default, /dev/ttyS0 maps to mini UART; on the other hand, /dev/ttyAMA0 maps to PL011 UART.\nSoftware Setup\n12$ sudo su$ vim /boot/config.txt\nadd following lines at the end of the file:\n12345678# enable serial interfaceenable_uart=1dtoverlay=uart0dtoverlay=uart1dtoverlay=uart2dtoverlay=uart3dtoverlay=uart4dtoverlay=uart5\nSave, exit &amp; Reboot !!\nCheck system open the serial by command $ ls -al /dev/ttyAMA*\n123456$ ls -al /dev/ttyAMA*crw-rw---- 1 root dialout 204, 64 Dec 16 16:01 /dev/ttyAMA0crw-rw---- 1 root dialout 204, 65 Dec 16 16:01 /dev/ttyAMA1crw-rw---- 1 root dialout 204, 66 Dec 16 16:01 /dev/ttyAMA2crw-rw---- 1 root dialout 204, 67 Dec 16 16:01 /dev/ttyAMA3crw-rw---- 1 root dialout 204, 68 Dec 16 16:01 /dev/ttyAMA4\nLet’s take a look into the Raspberry Pi 4 Model B GPIO Pinout:\n\nGPIO Pinout : https://www.raspberrypi.com/documentation/computers/os.html#gpio-and-the-40-pin-header\nHardware Setup\nRaspberry Pi Pin pair with UART:\n123456           TXD       RXD         Communication Portuart0 :  GPIO 14    GPIO 15         /dev/ttyAMA0 uart1 :  GPIO 0     GPIO 1          /dev/ttyAMA1uart2 :  GPIO 4     GPIO 5          /dev/ttyAMA2uart3 :  GPIO 8     GPIO 9          /dev/ttyAMA3uart4 :  GPIO 12    GPIO 13         /dev/ttyAMA4\nPC setup with USB-to-UART Adapter :\n\nFT232 : https://www.waveshare.com/ft232-usb-uart-board-type-a.htm\nPlease make sure GND is connected correctly !\nUSB-to-UART TXD connect to Raspberry Pi uart RXD GPIO Pin\nUSB-to-UART RXD connect to Raspberry Pi uart TXD GPIO Pin\nTake uart3 for example:\n123USB-to-UART TXD &lt;--&gt; GPIO 8USB-to-UART RXD &lt;--&gt; GPIO 9USB-to-UART GND &lt;--&gt; GND\nImplementation\nOnce finish setup, open a serial console on PC (ex. Putty) with correct COM Port (ex. COM3) &amp; Baud Rate set to 115200\nThen open a terminal in Raspberry Pi, send message from CLI to PC :\n$ echo 'hello' &gt; /dev/ttyAMA3\nThis command should send the string hello to PC via /dev/ttyAMA3 , then the string will be parsed by PC, finally display on serial console.\nHope this article can help those makers connect more devices via multiple UART interfaces !!\nCover photo by Dawid Zawiła on Unsplash\n","thumbnail":"https://miro.medium.com/max/720/0*wKhpJO1bfvRlAd2Q","plink":"https://jason19970210.github.io/2021/12/17/raspberry-pi -4-with-multiple-uart-interface/"},{"title":"","date":"2022-10-19T01:53:04.741Z","date_formatted":{"ll":"Oct 19, 2022","L":"10/19/2022","MM-DD":"10-19"},"updated":"2022-10-19T01:53:04.741Z","content":"csdcsdcsdc\ncdscdcdscs\nc\ndscsdcsd\ncsd\ncsdcsdcsd\n","plink":"https://jason19970210.github.io/about/"}]